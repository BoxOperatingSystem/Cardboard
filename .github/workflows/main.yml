name: Run cargo clippy and cargo test

on:
  push:
    branches: [master, staging, trying]
  pull_request:
    branches: [master]
  schedule:
    - cron: "19 2 * * 4"

env:
  CARGO_TERM_COLOR: always

jobs:
  clippy:
    name: Lints
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      actions: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rust-src, rustfmt, clippy
      - name: Install cargo-make
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-make
          use-tool-cache: true
      - name: Install clippy-sarif
        uses: actions-rs/install@v0.1
        with:
          crate: clippy-sarif
          use-tool-cache: true
      - name: Install sarif-fmt
        uses: actions-rs/install@v0.1
        with:
          crate: sarif-fmt
          use-tool-cache: true
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: fmt
          args: --all -- --check
      - name: Run lints
        run:
          cargo clippy
          -Zbuild-std=core,compiler_builtins,alloc -Zbuild-std-features=compiler-builtins-mem --target x86_64-unknown-uefi
          --message-format=json | clippy-sarif | tee rust-clippy-results.sarif | sarif-fmt
        continue-on-error: true
      - name: Upload analysis results to GitHub
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: rust-clippy-results.sarif
          wait-for-processing: true
  test:
    name: Test suite
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          override: true
          components: rust-src
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          toolchain: nightly
          command: test
          args: --workspace --exclude kernel --exclude xboot --exclude tkpcifamily --exclude testdrv
